
/*************************************************************************

Program Name: B1_MAIN
Author: Hina Shah

Purpose: Main script to generate Gestational Age, Biometry and Clinical info tables

Data Inputs: PNDB, Structure reports, EPIC, and R4 databases. 

Outputs: b1_ga_table - table with gestational ages,
    b1_biom - table with biometry measurements
    b1_maternal_info - tbale with maternal and birth clinical information.
    other tables generated by the scripts
******************************************************************************/



*libname famdat "\folders\myfolders";
*libname epic "\folders\myfolders\epic";

%let ServerPath = H:\Users\hinashah\SASFiles;

libname famdat  "&ServerPath.\InputData";
libname epic "&ServerPath.\InputData\epic720";
libname uslib "&ServerPath.\InputData\Ultrasound";
libname outlib "&ServerPath.\B1Data";

**** Path where the sas programs reside in ********;
%let MainPath= &ServerPath.\USFAMLIData;
%let ReportsOutputPath = &ServerPath.\Reports;

*************** INPUT Datasets ********************;
%let maintablename = famdat.famli_b1_dicom_sr; /* This is the original SR generated table. Copied.*/
%let pndb_table = famdat.pndb_famli_records_with_matches; /*This has all the data from PNDB*/
%let r4_table = famdat.unc_famli_r4data20190820;

************** OVERALL output tables ***************;
%let famli_table = outlib.famli_b1_subset;
%let famli_studies = outlib.b1_patmrn_studytm;

* ********************** GA variables *************;
**** Path where the ga sas programs reside in ********;
%let GAPath= &MainPath.\FAMLI_GA;

****** Names of the main tables to be used ********;
%let epic_ga_table = outlib.b1_ga_table_epic;
%let pndb_ga_table = outlib.b1_ga_table_pndb;
%let r4_ga_table = outlib.b1_ga_table_r4;
%let sr_ga_table = outlib.b1_ga_table_sr;
%let ga_final_table = outlib.b1_ga_table;

* ********************** Clinical variables **********;
**** Path where the clinical sas programs reside in ********;
%let ClinicalPath= &MainPath.\FAMLI_Clinical;

****** Names of the main tables to be used ********;
%let ga_table = outlib.b1_ga_table;

****** Names of output tables to be generated *****;
%let mat_info_pndb_table = outlib.b1_maternal_info_pndb;
%let mat_info_epic_table = outlib.b1_maternal_info_epic;
%let mat_final_output_table = outlib.b1_maternal_info;

******* Define global values *******;
%let max_ga_cycle = 308;
%let ga_cycle = 280;
%let min_height = 40;
%let max_height = 90;
%let min_weight = 90; /* in lbs */
%let max_weight = 400; /* in lbs */

* ********************** Biometry variables *********;
**** Path where the biom sas programs reside in ********;
%let BiomPath= &MainPath.\FAMLI_Biom;
%let biom_final_output_table = outlib.b1_biom;
%let biom_subset_measures = outlib.b1_biom_subset_measures;

**** create subset ********;
%include "&MainPath/B1_dataset_processing.sas";

**** Create gestational ages ********;
%include "&MainPath/FAMLI_GA/B1_MAIN_create_ga.sas";

**** Create maternal information ********;
%include "&MainPath/FAMLI_Clinical/B1_MAIN_create_clinical.sas";

**** Create biometry table ********;
%include "&MainPath/FAMLI_Biom/B1_MAIN_create_biometry_tables.sas";

****** Create the large table ********;
proc sql;
create table full_join as
    select distinct a.*, b.* 
    from 
        outlib.b1_ga_table as a 
        left join
        outlib.b1_biom as b
    on
        a.PatientID = b.PatientID and
        a.studydate = b.studydate and
        a.filename = b.filename;

create table outlib.b1_full_table as
    select distinct a.*, b.* 
    from 
        full_join as a 
        left join
        outlib.b1_maternal_info as b
    on
        a.PatientID = b.PatientID and
        a.studydate = b.studydate and
        a.filename = b.filename;

data outlib.b1_full_table;
set outlib.b1_full_table(drop= episode_working_edd ga_from_edd);
run;

proc delete data = full_join;
run;
